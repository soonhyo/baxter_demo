<launch>
  <!-- Set arguments: whether to launch RViz, which camera to use, and point cloud topic -->
  <arg name="gui" default="false"/>
  <arg name="camera" default="realsense_torso"/>
  <arg name="CLOUD" default="/$(arg camera)/depth_registered/quarter/points"/>
  <arg name="manager" default="pcl_nodelet"/>

  <!-- RGB color filter threshold values -->
  <arg name="r_max" default="30" />
  <arg name="r_min" default="0" />
  <arg name="g_max" default="100" />
  <arg name="g_min" default="0" />
  <arg name="b_max" default="190" />
  <arg name="b_min" default="70" />

  <!-- Launch the nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen" />

  <!-- Estimate multiple planar regions from organized point cloud -->
  <node name="multi_plane_estimate" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/OrganizedMultiPlaneSegmentation $(arg manager)"
        output="screen">
    <remap from="~input" to="$(arg CLOUD)" />
    <rosparam>
      max_curvature: 0.01
      estimate_normal: true
      min_size: 1000
    </rosparam>
  </node>

  <!-- Extract the points above the planes between ~min_height and ~max_height.-->
  <node name="plane_extraction" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/MultiPlaneExtraction $(arg manager)"
        output="screen">
    <remap from="~input" to="$(arg CLOUD)" />
    <remap from="~indices" to="multi_plane_estimate/output_refined" />
    <remap from="~input_polygons" to="multi_plane_estimate/output_refined_polygon" />
    <remap from="~input_coefficients" to="multi_plane_estimate/output_refined_coefficients" />
    <rosparam subst_value="true">
      use_indices: true
      use_sensor_frame: true
      sensor_frame: realsense_torso_color_optical_frame
      min_height: 0.01
      max_height: 1000.0
      use_async: true
      max_queue_size: 100
    </rosparam>
  </node>

  <!-- Filter pointclouds by RGB color values -->
  <node pkg="nodelet" type="nodelet" name="rgb_filter"
        args="load jsk_pcl/RGBColorFilter $(arg manager)" output="screen"
        respawn="true" >
    <remap from="~input" to="plane_extraction/output" />
    <remap from="~output" to="rgb_filter/output" />
    <rosparam>
      use_indices: false
    </rosparam>
    <param name="r_limit_max" value="$(arg r_max)" />
    <param name="r_limit_min" value="$(arg r_min)" />
    <param name="g_limit_max" value="$(arg g_max)" />
    <param name="g_limit_min" value="$(arg g_min)" />
    <param name="b_limit_max" value="$(arg b_max)" />
    <param name="b_limit_min" value="$(arg b_min)" />
  </node>

  <!-- Cluster the color-filtered points using Euclidean distance -->
  <node pkg="nodelet" type="nodelet" name="euclidean_clustering"
        args="load jsk_pcl/EuclideanClustering $(arg manager)" output="screen">
    <remap from="~input" to="rgb_filter/output" />
    <rosparam>
      tolerance: 0.02
      min_size: 100
    </rosparam>
  </node>

  <!-- Decompose clusters and align bounding boxes to planes -->
  <node name="segmentation_decomposer" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg manager)"
        output="screen" >
    <remap from="~input" to="rgb_filter/output" />
    <remap from="~target" to="euclidean_clustering/output" />
    <remap from="~align_planes" to="multi_plane_estimate/output_refined_polygon" />
    <remap from="~align_planes_coefficients"
           to="multi_plane_estimate/output_refined_coefficients" />
    <rosparam subst_value="true">
      use_pca: false
      align_boxes: true
      align_boxes_with_plane: true
      target_frame_id: base
      sort_by: cloud_size
      publish_clouds: false
      publish_tf: true
      approximate_sync: true
      queue_size: 100
    </rosparam>
  </node>

  <!-- Optional: Launch RViz for visualization if gui is true -->
  <node name="$(anon rviz)" pkg="rviz" type="rviz" if="$(arg gui)"
        args="-d $(find jsk_baxter_startup)/config/baxter_default.rviz">
    <param name="/use_sim_time" value="false" />
  </node>

</launch>
